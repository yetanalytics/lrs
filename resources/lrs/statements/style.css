/* global */
@import url('https://fonts.googleapis.com/css?family=Roboto+Mono:100,100i,300,300i,400,400i,500,500i,700,700i&subset=latin-ext');

html {
  height: 100%;
}

body {
  margin: 0 0 0 0;
  font-family: 'Roboto Mono', monospace;
  height: 100%;
}

nav.query {

}

a.query-remove-link {
  margin: 1em;
}

body > main {
  height: 100%;
}

/* JSON-specific */

.json-map {
  display:grid;
}

.json-map > .json-map-entry:not(:last-child) {
  border-bottom: 1px solid rgba(0,0,0,.05);
}

.json-array {
  display:grid;
  padding-left: .2em;
}

.json-array > * {
  border-bottom: 1px solid rgba(0,0,0,.05);
  border-top: 1px solid rgba(0,0,0,.05);
  border-left: 1px solid rgba(0,0,0,.05);
}

.json-array > *:not(:first-child) {
  margin-top: .1em;
}

.json-array > *:not(:last-child) {
  margin-bottom: .1em;
}

.json-array > :last-child {
  margin-bottom: .2em;
}


.json-array-element {
  display:grid;
}

.json-array-action {
  display: grid;
}


.json-map-entry {
  display:grid;
  grid-template-columns: 1fr 12fr;
}

/* json-map-action shares layout styling with json-map-entry but contains actions */
.json-map-action {
  display:grid;
  grid-template-columns: 1fr;
  padding: 1em;
}

.json-map-entry-key {
  padding: 1em;
  background-color: rgba(0,0,0,.025);
}

.json-map-entry-key:after {
  content: ":";
}


.json-map-entry-val {
  border-left: 1px solid rgba(0,0,0,.05);
}

/* leaf outer */

.json-map-entry-val > .json-map {
  margin-left: .2em;
  margin-bottom: .2em;
  border-left: 1px solid rgba(0,0,0,.05);
  border-bottom: 1px solid rgba(0,0,0,.05);
}

.json-map-entry-val.scalar {
  padding: 1em;
}

/* leaf inner */
.json-scalar {
  text-overflow: ellipsis;
  display: inline;
}

/* truncation.. inline collapse with json in mind */
/* expects a truncator input, preceded by label. Will hide the rest of the things except .no-truncate */
label.truncator-label {
  display:grid;
  grid-template-columns: 1fr;
  padding: 1em;
}

input.truncator ~ :not(.no-truncate,label.truncator-label) {
  display: none;
}

input.truncator:checked ~ :not(.no-truncate) {
  display: grid;
}

input.truncator:checked ~ label.truncator-label {
  display: none;
}
